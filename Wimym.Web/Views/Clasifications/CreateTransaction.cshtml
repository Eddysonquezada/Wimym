@model Domain.TRK.Operation

@{
    ViewBag.Title = "Registrar Transaccion";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StatusId)
       

        <div class="form-group">
            @Html.LabelFor(model => model.OriginId, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("OriginId", null, new { @class = "form-control" })
                @*+ Añade valor positivo*@
                @Html.ValidationMessageFor(model => model.OriginId, "", new { @class = "text-danger" })
            </div>
            <p> Si cambia el signo, se aplicara una transaccion contraria al tipo que se esta intentando crear (ingreso cambiaria a gasto y gasto cambiaria a ingreso)</p>
        </div>
        
       

        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control PsDates" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AccountId, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("AccountId", null, new { @class = "form-control" })
                @*+ Añade valor positivo*@
                @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TagId, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("TagId", null, new { @class = "form-control" })
                @*+ Añade valor positivo*@
                @Html.ValidationMessageFor(model => model.TagId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Recurrent, new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Recurrent)
                    @Html.ValidationMessageFor(model => model.Recurrent, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group" id="Periodicity">
            @Html.LabelFor(model => model.PeriodicityId, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("PeriodicityId", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PeriodicityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observations, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Observations, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observations, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <a class="btn btn-warning" href="@Url.Action("Resume", "Clasifications", new { area = "Expenses"  })">
                    <span class="fa fa-times "></span> Cancelar
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="fa fa-floppy-o "></i> Guardar
                </button>
            </div>
        </div>

    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(function () {
            $('#Periodicity').hide();
            
            $('#AccountId').on('change',
                function () { // on change of state
                    if (this.val()===1) // if changed state is "CHECKED"
                    {
                        $('#OriginId').val(1);
                     
                    }
                });

            $('#Recurrent').on('change',
                function() { // on change of state
                    if (this.checked) // if changed state is "CHECKED"
                    {
                        $('#Periodicity').show();
                    } else {
                        $('#Periodicity').hide();
                    }
                });


        });

    </script>
}


