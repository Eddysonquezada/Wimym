@model Domain.TRK.Operation

@{
    ViewBag.Title = "Registrar Transaccion";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StatusId)


        <div class="form-group">
            @Html.LabelFor(model => model.OriginId, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("OriginId", null, new { @class = "form-control" })
                @*+ Añade valor positivo*@
                @Html.ValidationMessageFor(model => model.OriginId, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control PsDates" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AccountId, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("AccountId", null, new { @class = "form-control" })
                @*+ Añade valor positivo*@
                @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            if (ViewBag.Indicator==1)
            {
                 
                    <div class="form-group">
                        <div class="control-label col-md-2">
                            ¿Fondos van a otra Cuenta??
                        </div>
                        <div class="col-md-1">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Recurrent)
                                @Html.ValidationMessageFor(model => model.Recurrent, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group" id="account2">
                        <div class="control-label col-md-2">
                            ¿Cuenta Destino??
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownList("AccountId2", null, new { @class = "form-control" })
                            @*+ Añade valor positivo*@
                            @Html.ValidationMessageFor(model => model.AccountId2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                
            }
            else
            {
                
                    <div class="form-group">
                        <div class="control-label col-md-2">
                            ¿Los Fondos Vienen de Otra Cuenta??
                        </div>
                        <div class="col-md-1">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Recurrent)
                                @Html.ValidationMessageFor(model => model.Recurrent, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group" id="account2">
                        <div class="control-label col-md-2">
                            Cuenta Origen
                        </div>   <div class="col-md-3">
                            @Html.DropDownList("AccountId2", null, new { @class = "form-control" })
                            @*+ Añade valor positivo*@
                            @Html.ValidationMessageFor(model => model.AccountId2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                
            }
        }
      
        <div class="form-group">
            @Html.LabelFor(model => model.TagId, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("TagId", null, new { @class = "form-control" })
                @*+ Añade valor positivo*@
                @Html.ValidationMessageFor(model => model.TagId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Observations, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Observations, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observations, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <a class="btn btn-warning" href="@Url.Action("Resume", "Clasifications", new { area = "Expenses"  })">
                    <span class="fa fa-times "></span> Cancelar
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="fa fa-floppy-o "></i> Guardar
                </button>
            </div>
        </div>

    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(function () {
            //  $('#AccountId2').show();

            $('#Recurrent').on('change',
                function () { // on change of state
                    if (this.checked) // if changed state is "CHECKED"
                    {
                        $('#account2').show();
                    } else {
                        $('#account2').hide();
                    }
                });


        });

    </script>
}


