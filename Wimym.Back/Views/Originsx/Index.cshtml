@model Pagination<Wimym.Backend.Models.Origin>

@{
    ViewData["Title"] = "Origins Index";
}

<p>
    <a class="btn btn-primary" asp-action="Create">Create New Origin</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Filter: <input type="text" name="searchFilter" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
            <a asp-action="Index"> All Origins</a> | showed rows @Model.TotalR
        </p>
    </div>
</form>

<table class="table">
    <thead>
    <tr>
        <th>
            <a asp-action="Index"
               asp-route-sort="@ViewData["CodeSortparam"]"
               asp-route-currentFilter="@ViewData["CurrentFilter"]">
                Code
            </a>
        </th>
        <th>
            <a asp-action="Index"
               asp-route-sort="@ViewData["NameSortparam"]"
               asp-route-currentFilter="@ViewData["CurrentFilter"]">
                Name
            </a>
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.OriginId">Edit</a> |
                <a class="btn btn-info" asp-action="Details" asp-route-id="@item.OriginId">Details</a> |
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.OriginId">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sort="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex-1)"
   asp-route-currentFilter="@ViewData["currentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
@for (int i = 1; i <= Model.TotalPages; i++)
{
    <a asp-action="Index"
       asp-route-sort="@ViewData["CurrentSort"]"
       asp-route-page="@i"
       asp-route-currentFilter="@ViewData["currentFilter"]"
       class="btn btn-default @nextDisabled">
        @i
    </a>
}
<a asp-action="Index"
   asp-route-sort="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex+1)"
   asp-route-currentFilter="@ViewData["currentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
